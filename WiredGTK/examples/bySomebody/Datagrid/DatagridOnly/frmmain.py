import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):					initUI(self,param,w=400,h=400,title="WiredGTKV1.0",controlbox=True,startpos=(200,200),timeoutdestroy=-1)		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			return False		else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			if self.timeoutdestroy!=-1:				self.timeoutdestroy-=1				if self.timeoutdestroy==0:					self.unload(None)			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Height': '126', 'ParentsType': '', 'Events': '[row_activated]', 'Top': '51', 'Tag': 'Activex', 'Text': 'datagridwta1', 'Enable': 'True', 'Width': '314', 'BackColor': '(0, 0.6854447564469378, 0.17127049629752633, 0.5)', 'Name': 'datagridwta1', 'Left': '6', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Visible': 'True', 'Picture': 'datagridwta.png'}","datagridwta","usercontrol","[['row_activated', 'self,value']]")		self.create("{'Height': '36', 'ParentsType': '', 'Events': '[clicked]', 'Top': '261', 'Tag': '', 'Text': 'getSelectedValues', 'Enable': 'True', 'Width': '128', 'BackColor': '(1,1,1,1)', 'Name': 'Button1', 'Left': '83', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Visible': 'False', 'Picture': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Height': '33', 'ParentsType': '', 'Events': '[clicked]', 'Top': '225', 'Tag': '', 'Text': 'getSelectedIndex', 'Enable': 'True', 'Width': '131', 'BackColor': '(1,1,1,1)', 'Name': 'Button2', 'Left': '82', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Visible': 'False', 'Picture': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Height': '36', 'ParentsType': '', 'Events': '[clicked]', 'Top': '299', 'Tag': '', 'Text': 'values', 'Enable': 'True', 'Width': '128', 'BackColor': '(1,1,1,1)', 'Name': 'Button3', 'Left': '87', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Visible': 'False', 'Picture': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Height': '33', 'ParentsType': '', 'Events': '[clicked]', 'Top': '185', 'Tag': '', 'Text': 'Populate Datagrid', 'Enable': 'True', 'Width': '176', 'BackColor': '(1,1,1,1)', 'Name': 'Button4', 'Left': '62', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Visible': 'True', 'Picture': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Height': '33', 'ParentsType': '', 'Events': '[clicked]', 'Top': '340', 'Tag': '', 'Text': 'Fields', 'Enable': 'True', 'Width': '129', 'BackColor': '(1,1,1,1)', 'Name': 'Button5', 'Left': '87', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Visible': 'False', 'Picture': ''}","Button","usercontrol","[['clicked', 'self,e']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def datagridwta1_row_activated(self,value):		self.window.Text=value		pass	def Button1_clicked(self,e):		self.window.Text= self.datagridwta1.getSelectedValues()		pass	def Button2_clicked(self,e):		self.window.Text= self.datagridwta1.getSelectedIndex()		pass	def Button3_clicked(self,e):		self.window.Text= self.datagridwta1.values		pass	def Button4_clicked(self,e):		header=['Band','Singer','Year']		records=[['Metalica','James Hetfield','1984'],			['Yngwie Malmsteen','Yngwie Johan Malmsteen','1983']]				self.datagridwta1.Display(header,records,False)				self.Button1.Visible=True		self.Button2.Visible=True		self.Button3.Visible=True		self.Button5.Visible=True		pass	def Button5_clicked(self,e):		self.window.Text= self.datagridwta1.fields		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()