import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):					initUI(self,param,w=400,h=400,title="WiredGTKV1.0",controlbox=True,startpos=(200,200),timeoutdestroy=-1)		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			#ExitApplication() #activate this if u want to destroy this window			return False		else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			if self.timeoutdestroy!=-1:				self.timeoutdestroy-=1				if self.timeoutdestroy==0:					self.unload(None)			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.Activity=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '405', 'Var': '', 'Tag': '', 'Left': '5', 'Font': '', 'Height': '655', 'Picture': '', 'Help': '', 'Top': '45', 'ForeColor': '(0,0,0,1)', 'Name': 'Activity', 'Text': 'Layout1', 'ParentsType': '', 'BackColor': '(0, 0.15818675032557372, 0.9408383013784336, 0.5)', 'Events': '[[, ]]'}","Layout","usercontrol","[]")		self.mBase=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '405', 'Var': '', 'Tag': '', 'Left': '0', 'Font': '', 'Height': '655', 'Picture': '', 'Help': '', 'Top': '0', 'ForeColor': '(0,0,0,1)', 'Name': 'mBase', 'Text': 'Layout1', 'ParentsType': 'Layout', 'BackColor': '(0, 0.9535890512821091, 0.7790916597141007, 0.5)', 'Events': '[]'}","Layout","Activity","[]")		self.Image1=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '405', 'Var': '', 'Tag': '', 'Left': '0', 'Font': '', 'Height': '655', 'Picture': 'HomeModule-809c8.png', 'Help': '', 'Top': '0', 'ForeColor': '(0,0,0,1)', 'Name': 'Image1', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(1,1,1,1)', 'Events': '[[, ]]'}","Image","mBase","[]")		self.btnProfile=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '55', 'Var': '', 'Tag': '', 'Left': '20', 'Font': '', 'Height': '45', 'Picture': '', 'Help': '', 'Top': '5', 'ForeColor': '(0,0,0,1)', 'Name': 'btnProfile', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Events': '[[, ]]'}","Layout","mBase","[]")		self.btnQr=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '55', 'Var': '', 'Tag': '', 'Left': '337', 'Font': '', 'Height': '45', 'Picture': '', 'Help': '', 'Top': '7', 'ForeColor': '(0,0,0,1)', 'Name': 'btnQr', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Events': '[[, ]]'}","Layout","mBase","[]")		self.btnSchedule=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '170', 'Var': '', 'Tag': '', 'Left': '212', 'Font': '', 'Height': '35', 'Picture': '', 'Help': '', 'Top': '127', 'ForeColor': '(0,0,0,1)', 'Name': 'btnSchedule', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Events': '[]'}","Layout","mBase","[]")		self.btnUpload=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '45', 'Var': '', 'Tag': '', 'Left': '322', 'Font': '', 'Height': '40', 'Picture': '', 'Help': '', 'Top': '197', 'ForeColor': '(0,0,0,1)', 'Name': 'btnUpload', 'Text': 'Layout2', 'ParentsType': 'Layout', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Events': '[[, ]]'}","Layout","mBase","[]")		self.btnAppointments=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '105', 'Var': '', 'Tag': '', 'Left': '152', 'Font': '', 'Height': '70', 'Picture': '', 'Help': '', 'Top': '277', 'ForeColor': '(0,0,0,1)', 'Name': 'btnAppointments', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Events': '[[, ]]'}","Layout","mBase","[]")		self.btnHotline=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '100', 'Var': '', 'Tag': '', 'Left': '280', 'Font': '', 'Height': '70', 'Picture': '', 'Help': '', 'Top': '277', 'ForeColor': '(0,0,0,1)', 'Name': 'btnHotline', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Events': '[[, ]]'}","Layout","mBase","[]")		self.btnUpdates=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '90', 'Var': '', 'Tag': '', 'Left': '165', 'Font': '', 'Height': '45', 'Picture': '', 'Help': '', 'Top': '607', 'ForeColor': '(0,0,0,1)', 'Name': 'btnUpdates', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Events': '[[, ]]'}","Layout","mBase","[]")		self.btnLogs=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '90', 'Var': '', 'Tag': '', 'Left': '315', 'Font': '', 'Height': '45', 'Picture': '', 'Help': '', 'Top': '607', 'ForeColor': '(0,0,0,1)', 'Name': 'btnLogs', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Events': '[[, ]]'}","Layout","mBase","[]")		self.lblName=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '365', 'Var': '', 'Tag': '', 'Left': '20', 'Font': '', 'Height': '60', 'Picture': '', 'Help': '', 'Top': '65', 'Alignment': '', 'ForeColor': '(0,0,0,1)', 'Name': 'lblName', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(1,1,1,1)', 'Events': '[]'}","Label","mBase","[]")		self.lblProgress=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '275', 'Var': '', 'Tag': '', 'Left': '35', 'Font': '', 'Height': '25', 'Picture': '', 'Help': '', 'Top': '195', 'Alignment': '', 'ForeColor': '(0,0,0,1)', 'Name': 'lblProgress', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(1,1,1,1)', 'Events': '[[, ]]'}","Label","mBase","[]")		self.progressBar=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '335', 'Var': '', 'Tag': '', 'Left': '35', 'Font': '', 'Height': '20', 'Picture': '', 'Help': '', 'Top': '245', 'Alignment': '', 'ForeColor': '(0,0,0,1)', 'Name': 'progressBar', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(1,1,1,1)', 'Events': '[[, ]]'}","Label","mBase","[]")		self.ProgressPercent=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '65', 'Var': '', 'Tag': '', 'Left': '35', 'Font': '', 'Height': '25', 'Picture': '', 'Help': '', 'Top': '220', 'Alignment': 'CENTER', 'ForeColor': '(0,0,0,1)', 'Name': 'ProgressPercent', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(1,1,1,1)', 'Events': '[[, ]]'}","Label","mBase","[]")		self.btnMedications=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '105', 'Var': '', 'Tag': '', 'Left': '25', 'Font': '', 'Height': '70', 'Picture': '', 'Help': '', 'Top': '280', 'ForeColor': '(0,0,0,1)', 'Name': 'btnMedications', 'Text': '', 'ParentsType': 'Layout', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Events': '[[, ]]'}","Layout","mBase","[]")		self.Layout1=forms		self.create("{'Enable': 'True', 'Visible': 'True', 'Width': '360', 'Var': '', 'Tag': '', 'Left': '25', 'Font': '', 'Height': '200', 'Picture': '', 'Help': '', 'Top': '385', 'ForeColor': '(0,0,0,1)', 'Name': 'Layout1', 'Text': 'Layout1', 'ParentsType': 'Layout', 'BackColor': '(0, 0.17057506783382947, 0.7633142629054608, 0.5)', 'Events': '[]'}","Layout","mBase","[]")		import DatagridTreeView		self.pDocList=DatagridTreeView.Handler		self.create("{'Enable': 'True', 'Font': '', 'Left': '0', 'UNSELECT': '#FFFFFF', 'Var': '', 'Help': '', 'Top': '0', 'ForeColor': '(0,0,0,1)', 'Text': 'DatagridTreeView1', 'ParentsType': 'Layout', 'BackColor': '(0, 0.9180051123368297, 0.41465668557009494, 0.5)', 'Events': '[]', 'SELECT': '#FFAAAA', 'Visible': 'True', 'Width': '360', 'dbtype': 'sqllite', 'Tag': 'Activex', 'Picture': '', 'AlternateColor': 'False', 'Height': '200', 'FontSize': '14', 'FontStyle': 'Times New Roman', 'Name': 'pDocList'}","DatagridTreeView","Layout1","[]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False,x=None,y=None):		if x!=None:			self._window.move(x,y)		self._window.set_modal(modal)		self._window.show()		Gtk.main()		return ""#put ur return value here upon closing this formif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()