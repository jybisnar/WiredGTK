import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wired_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	#WiredEvent def row_activated(self,value)	#add more events 	def __init__(self,*param):				initUI(self,param,w=500,h=500,title="WiredGTKV1.0 ListBoxWithScroll")		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()		self.List=[]		self.ListIndex=-1	def activeXcreated(self):		self.ScrolledWindow1.Width=self.usercontrol.Width-30		self.ScrolledWindow1.Height=self.usercontrol.Height-30		self.ListBox1.Width=self.usercontrol.Width-40		self.ListBox1.Height=self.usercontrol.Height		pass			def unload(self,*args):		GLib.source_remove(self.timeout_id)		self._window.hide()		del self._window		Gtk.main_quit()		def loop(self, user_data):		if self.form_load==False:			self.form_load=True			if self.sch.Event():#timer routine			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def connect(self,ev,evusr):		self.wiredevents.update({ev:evusr})		@property	def Text(self):		return ''	@Text.setter	def Text(self,value):		pass	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Tag': '', 'Visible': 'True', 'Left': '31', 'Width': '318', 'Enable': 'True', 'Text': 'ScrolledWindow1', 'BackColor': '(0, 0.8939305167531786, 0.9824540069112034, 0.5)', 'Name': 'ScrolledWindow1', 'Top': '11', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Font': '', 'Events': '[[, ]]', 'Height': '320', 'ParentsType': ''}","ScrolledWindow","usercontrol","[]")		self.create("{'Tag': '', 'Visible': 'True', 'Left': '134', 'Width': '100', 'Enable': 'True', 'Text': 'Button1', 'BackColor': '(1,1,1,1)', 'Name': 'Button1', 'Top': '337', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Font': '', 'Events': '[[, ]]', 'Height': '50', 'ParentsType': ''}","Button","usercontrol","[]")		self.create("{'Tag': '', 'Visible': 'True', 'Left': '11', 'Width': '300', 'Enable': 'True', 'Text': 'ListBox1', 'BackColor': '(1,1,1,1)', 'Name': 'ListBox1', 'Top': '9', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Font': '', 'Events': '[row-activated]', 'Height': '300', 'ParentsType': 'ScrolledWindow'}","ListBox","ScrolledWindow1","[['row-activated', 'self,wid, cr']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()				def AddList(self,lst):		self.List=lst		for a in lst:			lbr=Gtk.ListBoxRow()			label=Gtk.Label(str(a))			lbr.add(label)			label.set_justify(Gtk.Justification.LEFT)			forms(lbr).Visible=True		#important			forms(label).Visible=True	#important			self._ListBox1.add(lbr)								pass	def Add(self,value):		self.List=[value]		lbr=Gtk.ListBoxRow()		label=Gtk.Label(str(value))		label.set_justify(Gtk.Justification.LEFT)		lbr.add(label)		forms(lbr).Visible=True		#important		forms(label).Visible=True	#important		self._ListBox1.add(lbr)								pass	def ListBox1_row_activated(self,wid, row):		index=row.get_index()		val=row.get_children()[0].get_label() #+ " " + str(index)		self.ListIndex=index		if self.caller!=None:			if 'row_activated' in self.wiredevents:					self.wiredevents['row_activated'](val)				passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()