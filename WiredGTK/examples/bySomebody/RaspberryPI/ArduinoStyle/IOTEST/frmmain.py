import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):					initUI(self,param,w=400,h=400,title="WiredGTKV1.0",controlbox=True,startpos=(200,200),timeoutdestroy=-1)		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()		self.pin=[18,23,24,25]		self.ptr=3		self.raks=12	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			ExitApplication() #activate this if u want to destroy this window			return False		else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			if self.timeoutdestroy!=-1:				self.timeoutdestroy-=1				if self.timeoutdestroy==0:					self.unload(None)			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Height': '37', 'pin': '18', 'Width': '365', 'Top': '25', 'Enable': 'True', 'Visible': 'True', 'Font': '', 'Left': '5', 'BackColor': '(0, 0.37102550521174793, 0.3514486369581531, 0.5)', 'Picture': '', 'ForeColor': '(0,0,0,1)', 'Name': 'ctlduino2', 'Tag': 'Activex', 'Text': 'ctlduino2', 'ParentsType': '', 'Events': '[]'}","ctlduino","usercontrol","[]")		self.create("{'Height': '37', 'pin': '23', 'Width': '365', 'Top': '59', 'Enable': 'True', 'Visible': 'True', 'Font': '', 'Left': '4', 'BackColor': '(0, 0.37102550521174793, 0.3514486369581531, 0.5)', 'Picture': '', 'ForeColor': '(0,0,0,1)', 'Name': 'ctlduino3', 'Tag': 'Activex', 'Text': 'ctlduino3', 'ParentsType': '', 'Events': '[[, ]]'}","ctlduino","usercontrol","[]")		self.create("{'Height': '37', 'pin': '24', 'Width': '365', 'Top': '92', 'Enable': 'True', 'Visible': 'True', 'Font': '', 'Left': '4', 'BackColor': '(0, 0.37102550521174793, 0.3514486369581531, 0.5)', 'Picture': '', 'ForeColor': '(0,0,0,1)', 'Name': 'ctlduino4', 'Tag': 'Activex', 'Text': 'ctlduino4', 'ParentsType': '', 'Events': '[[, ]]'}","ctlduino","usercontrol","[]")		self.create("{'Height': '37', 'pin': '25', 'Width': '363', 'Top': '124', 'Enable': 'True', 'Visible': 'True', 'Font': '', 'Left': '4', 'BackColor': '(0, 0.37102550521174793, 0.3514486369581531, 0.5)', 'Picture': '', 'ForeColor': '(0,0,0,1)', 'Name': 'ctlduino1', 'Tag': 'Activex', 'Text': 'ctlduino1', 'ParentsType': '', 'Events': '[[, ]]'}","ctlduino","usercontrol","[]")		self.create("{'Height': '32', 'Width': '30', 'Top': '168', 'Enable': 'False', 'Visible': 'True', 'Font': '', 'Left': '67', 'Interval': '100', 'BackColor': '(0, 0.6892484859276216, 0.49214323492494216, 0.5)', 'Picture': 'Timer.png', 'ForeColor': '(0,0,0,1)', 'Name': 'Timer1', 'Tag': 'Activex', 'Text': 'Timer1', 'ParentsType': '', 'Events': '[Tick]'}","Timer","usercontrol","[['Tick', 'self']]")		self.create("{'Height': '50', 'Width': '126', 'Top': '169', 'Enable': 'True', 'Visible': 'True', 'Font': '', 'Left': '245', 'BackColor': '(1,1,1,1)', 'Picture': '', 'ForeColor': '(0,0,0,1)', 'Name': 'Button1', 'Tag': '', 'Text': 'Toggle Timer', 'ParentsType': '', 'Events': '[clicked]'}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Height': '164', 'Width': '35', 'Top': '170', 'Enable': 'True', 'Max': '100', 'Visible': 'True', 'Font': '', 'Left': '18', 'Value': '1', 'BackColor': '(0, 0.2101966178614063, 0.4239753884952725, 0.5)', 'Picture': 'VScrollBarWTA.png', 'ForeColor': '(0,0,0,1)', 'Name': 'VScrollBarWTA1', 'Tag': 'Activex', 'Text': 'VScrollBarWTA1', 'ParentsType': '', 'Events': '[change-value]'}","VScrollBarWTA","usercontrol","[['change-value', 'self,value']]")		self.create("{'Height': '50', 'Width': '110', 'Top': '215', 'Enable': 'True', 'Visible': 'True', 'Font': '', 'Left': '55', 'BackColor': '(1,1,1,1)', 'Picture': '', 'ForeColor': '(0,0,0,1)', 'Name': 'Button2', 'Tag': '', 'Text': 'Start PWM(GPIO18)', 'ParentsType': '', 'Events': '[clicked]'}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Height': '50', 'Width': '175', 'Top': '270', 'Enable': 'True', 'Visible': 'True', 'Font': '', 'Left': '55', 'BackColor': '(1,1,1,1)', 'Picture': '', 'ForeColor': '(0,0,0,1)', 'Name': 'Button3', 'Tag': '', 'Text': 'Stop PWM', 'ParentsType': '', 'Events': '[clicked]'}","Button","usercontrol","[['clicked', 'self,e']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False,x=None,y=None):		if x!=None:			self._window.move(x,y)		if modal and self.caller!=None:			self._window.set_transient_for(self.caller._window)		self._window.set_modal(modal)		self._window.show()		Gtk.main()		return ""#put ur return value here upon closing this form	def Button1_clicked(self,e):		if self.Timer1.Enable==True:			self.Timer1.Enable=False		else:			self.Timer1.Enable=True					def Timer1_Tick(self):		pinMode(self.pin[self.ptr],OUTPUT)		digitalWrite(self.pin[self.ptr],LOW)		self.ptr+=1				if self.ptr==len(self.pin):			self.ptr=0		pinMode(self.pin[self.ptr],OUTPUT)		digitalWrite(self.pin[self.ptr],HIGH)		pass	def VScrollBarWTA1_change_value(self,value):		try:			self.p.ChangeDutyCycle(float(value))		except:			a=0		pass	def Button2_clicked(self,e):		pinMode(18,OUTPUT)		self.p = GPIO.PWM(18,100)          #GPIO19 as PWM output, with 100Hz frequency		self.p.start(0) 		pass	def Button3_clicked(self,e):		try:			self.p.stop()		except:			a=0		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()