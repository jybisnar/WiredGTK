import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	#WiredEvent def usercontrolEvent1(self,e)	#add more events 	def __init__(self,*param):					initUI(self,param,w=500,h=500,title="WiredGTKV1.0  Drawing Sample2")		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()			def unload(self,*args):		GLib.source_remove(self.timeout_id)		self._window.hide()		del self._window		Gtk.main_quit()				def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Picture': '', 'Enable': 'True', 'Name': 'DrawingArea1', 'Visible': 'True', 'Text': 'DrawingArea1', 'Top': '15', 'Height': '407', 'ParentsType': '', 'Width': '499', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Font': '', 'Events': '[draw]', 'Left': '58'}","DrawingArea","usercontrol","[['draw', 'self,wid, cr']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def DrawingArea1_draw(self, wid, cr):		import math		#cr = wid.window.cairo_create()		cr.set_line_width(2)		cr.set_source_rgb(0,0,1)		cr.rectangle(10,10,100,100)		cr.stroke()		cr.set_source_rgb(1,0,0)		cr.rectangle(10,125,100,100)		cr.stroke()		cr.set_source_rgb(0,1,0)		cr.rectangle(125,10,100,100)		cr.fill()		cr.set_source_rgb(0.5,0.6,0.7)		cr.rectangle(125,125,100,100)		cr.fill()		cr.arc(300, 50, 50,0, 2*math.pi)		cr.set_source_rgb(0.2,0.2,0.2)		cr.fill()		cr.arc(300, 200, 50, math.pi,0)		cr.set_source_rgb(0.1,0.1,0.1)		cr.stroke()		cr.move_to(50,240)		cr.show_text("Hello PyGTK")		cr.move_to(150,240)		cr.line_to(400,240)		cr.stroke()				passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()