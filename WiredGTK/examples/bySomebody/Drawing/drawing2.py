import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	#WiredEvent def usercontrolEvent1(self,e)	#add more events 	def __init__(self,*param):				initUI(self,param,w=500,h=500,title="WiredGTKV1.0 Drawing Sample1")		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()			self.coords = []	def unload(self,*args):		GLib.source_remove(self.timeout_id)		self._window.hide()		del self._window		Gtk.main_quit()		def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Picture': '', 'Enable': 'True', 'Name': 'DrawingArea1', 'Visible': 'True', 'Text': 'DrawingArea1', 'Top': '30', 'Height': '300', 'ParentsType': '', 'Width': '300', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Font': '', 'Events': '[draw]', 'Left': '87'}","DrawingArea","usercontrol","[['draw', 'self,wid, cr']]")		self.create("{'Picture': '', 'Enable': 'True', 'Name': 'Button1', 'Visible': 'True', 'Text': 'Button1', 'Top': '351', 'Height': '50', 'ParentsType': '', 'Width': '100', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Font': '', 'Events': '[clicked]', 'Left': '185'}","Button","usercontrol","[['clicked', 'self,e']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def Button1_clicked(self,e):		self.coords.append((10,10))		self.coords.append((100,100))		self.coords.append((100,100))		self.coords.append((10,200))		self.coords.append((10,200))		self.coords.append((10,10))		self._DrawingArea1.queue_draw()		pass		pass	def DrawingArea1_draw(self, wid, cr):		cr.set_source_rgb(0, 0, 0)		cr.set_line_width(0.5)		for i in self.coords:			for j in self.coords:				cr.move_to(i[0], i[1])				cr.line_to(j[0], j[1]) 				cr.stroke()			del self.coords[:]            		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()