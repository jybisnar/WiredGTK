import gi
import time
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk,GObject,Gdk,Pango,GLib
from wta_module import *
#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils
#	#####################www.WireThemAll.com#####################

class Handler(object):
	def __init__(self,*param):			
		initUI(self,param,w=400,h=400,title="WiredGTKV1.0 OpenCV")
		self.GTKForms()
		self.sch=Scheduler(500)#500 ms
		self.sch.Start()

	def unload(self,*args):
		destroy=True
		if destroy==True:
			GLib.source_remove(self.timeout_id)
			self._window.hide()
			del self._window
			Gtk.main_quit()		
		else:
			self.window.Visible=False
			return True		
	def loop(self, user_data):
		if self.form_load==False:
			self.form_load=True
		if self.sch.Event():#timer routine
			#code here
			self.sch.Start()#restart scheduler
		return True	#return true so that main_loop can call it again 
	def create(self,prop,control,parent,event=[]):
		createWidget(self,prop,control,parent,event)
	def GTKForms(self):
		self.create("{'Height': '145', 'ParentsType': '', 'Enable': 'True', 'Left': '3', 'Top': '3', 'Width': '190', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Events': '[]', 'Picture': '', 'Name': 'Image1', 'Text': 'Image1', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Tag': ''}","Image","usercontrol","[]")
		self.create("{'Height': '50', 'ParentsType': '', 'Enable': 'True', 'Left': '1', 'Top': '150', 'Width': '168', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Events': '[clicked]', 'Picture': '', 'Name': 'Button1', 'Text': 'Load \\image\\colored.png', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Tag': ''}","Button","usercontrol","[['clicked', 'self,e']]")
		self.create("{'Height': '145', 'ParentsType': '', 'Enable': 'True', 'Left': '214', 'Top': '3', 'Width': '190', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Events': '[]', 'Picture': '', 'Name': 'Image2', 'Text': 'Image2', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Tag': ''}","Image","usercontrol","[]")
		self.create("{'Height': '50', 'ParentsType': '', 'Enable': 'True', 'Left': '255', 'Top': '149', 'Width': '100', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Events': '[clicked]', 'Picture': '', 'Name': 'Button2', 'Text': 'Gray', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Tag': ''}","Button","usercontrol","[['clicked', 'self,e']]")
		self.create("{'Height': '145', 'ParentsType': '', 'Enable': 'True', 'Left': '3', 'Top': '202', 'Width': '190', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Events': '[]', 'Picture': '', 'Name': 'Image3', 'Text': 'Image3', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Tag': ''}","Image","usercontrol","[]")
		self.create("{'Height': '50', 'ParentsType': '', 'Enable': 'True', 'Left': '2', 'Top': '351', 'Width': '100', 'ForeColor': '(0,0,0,1)', 'Font': '', 'Events': '[clicked]', 'Picture': '', 'Name': 'Button3', 'Text': 'Canny', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Tag': ''}","Button","usercontrol","[['clicked', 'self,e']]")
	def Widget(self):
		if self._usercontrol in self._mainlayout.get_children():
			self._mainlayout.remove(self._usercontrol)
		return self._usercontrol
	def Hide(self):
		self._window.hide()
	def Show(self,modal=False):
		self._window.set_modal(modal)
		self._window.show()
		Gtk.main()
	def Button1_clicked(self,e):
		self.Image1.LoadPicture='image/colored.png'
		pass
	def Button2_clicked(self,e):
		image = cv2.imread('image/colored.png')
		gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
		self.Image2.LoadPictureOCV=gray_image
		pass
	def Button3_clicked(self,e):
		image = cv2.imread('image/colored.png')
		gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
		edges = cv2.Canny(gray_image,100,200)
		self.Image3.LoadPictureOCV=edges
		pass
if __name__ == "__main__":
	_m = Handler()
	_m._window.show()
	Gtk.main()