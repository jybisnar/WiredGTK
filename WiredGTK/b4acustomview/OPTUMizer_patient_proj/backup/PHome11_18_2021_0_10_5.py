import gi
import time
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk,GObject,Gdk,Pango,GLib
from wta_module import *
#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils
#	#####################www.WireThemAll.com#####################

class Handler(object):
	def __init__(self,*param):			
		initUI(self,param,w=400,h=400,title="WiredGTKV1.0",controlbox=True,startpos=(200,200),timeoutdestroy=-1)
		self.GTKForms()
		self.sch=Scheduler(500)#500 ms
		self.sch.Start()

	def unload(self,*args):
		destroy=True
		if destroy==True:
			GLib.source_remove(self.timeout_id)
			self._window.hide()
			del self._window
			#ExitApplication() #activate this if u want to destroy this window
			return False
		else:
			self.window.Visible=False
			return True		
	def loop(self, user_data):
		if self.form_load==False:
			self.form_load=True
		if self.sch.Event():#timer routine
			#code here
			if self.timeoutdestroy!=-1:
				self.timeoutdestroy-=1
				if self.timeoutdestroy==0:
					self.unload(None)
			self.sch.Start()#restart scheduler
		return True	#return true so that main_loop can call it again 
	def create(self,prop,control,parent,event=[]):
		createWidget(self,prop,control,parent,event)
	def GTKForms(self):
		self.Activity=forms
		self.create("{'Left': '5', 'BackColor': '(0, 0.15818675032557372, 0.9408383013784336, 0.5)', 'Name': 'Activity', 'Picture': '', 'ParentsType': '', 'Height': '655', 'Width': '405', 'Top': '45', 'Enable': 'True', 'Events': '[]', 'Help': '', 'Text': 'Layout1', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","usercontrol","[]")
		self.mBase=forms
		self.create("{'Left': '0', 'BackColor': '(0, 0.9535890512821091, 0.7790916597141007, 0.5)', 'Name': 'mBase', 'Picture': '', 'ParentsType': 'Layout', 'Height': '655', 'Width': '405', 'Top': '0', 'Enable': 'True', 'Events': '[]', 'Help': '', 'Text': 'Layout1', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","Activity","[]")
		self.Image1=forms
		self.create("{'Left': '0', 'BackColor': '(1,1,1,1)', 'Name': 'Image1', 'Picture': 'HomeModule-809c8.png', 'ParentsType': 'Layout', 'Height': '655', 'Width': '405', 'Top': '0', 'Enable': 'True', 'Events': '[]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Image","mBase","[]")
		self.btnProfile=forms
		self.create("{'Left': '20', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Name': 'btnProfile', 'Picture': '', 'ParentsType': 'Layout', 'Height': '45', 'Width': '55', 'Top': '5', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","mBase","[]")
		self.btnQr=forms
		self.create("{'Left': '337', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Name': 'btnQr', 'Picture': '', 'ParentsType': 'Layout', 'Height': '45', 'Width': '55', 'Top': '7', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","mBase","[]")
		self.btnSchedule=forms
		self.create("{'Left': '212', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Name': 'btnSchedule', 'Picture': '', 'ParentsType': 'Layout', 'Height': '35', 'Width': '170', 'Top': '127', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","mBase","[]")
		self.btnUpload=forms
		self.create("{'Left': '322', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Name': 'btnUpload', 'Picture': '', 'ParentsType': 'Layout', 'Height': '40', 'Width': '45', 'Top': '197', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': 'Layout2', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","mBase","[]")
		self.btnAppointments=forms
		self.create("{'Left': '152', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Name': 'btnAppointments', 'Picture': '', 'ParentsType': 'Layout', 'Height': '70', 'Width': '105', 'Top': '277', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","mBase","[]")
		self.btnHotline=forms
		self.create("{'Left': '280', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Name': 'btnHotline', 'Picture': '', 'ParentsType': 'Layout', 'Height': '70', 'Width': '100', 'Top': '277', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","mBase","[]")
		self.btnUpdates=forms
		self.create("{'Left': '165', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Name': 'btnUpdates', 'Picture': '', 'ParentsType': 'Layout', 'Height': '45', 'Width': '90', 'Top': '607', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","mBase","[]")
		self.btnLogs=forms
		self.create("{'Left': '315', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Name': 'btnLogs', 'Picture': '', 'ParentsType': 'Layout', 'Height': '45', 'Width': '90', 'Top': '607', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","mBase","[]")
		self.lblName=forms
		self.create("{'Left': '20', 'BackColor': '(1,1,1,1)', 'Name': 'lblName', 'Picture': '', 'ParentsType': 'Layout', 'Height': '60', 'Width': '365', 'Top': '65', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Alignment': '', 'Var': ''}","Label","mBase","[]")
		self.lblProgress=forms
		self.create("{'Left': '35', 'BackColor': '(1,1,1,1)', 'Name': 'lblProgress', 'Picture': '', 'ParentsType': 'Layout', 'Height': '25', 'Width': '275', 'Top': '195', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Alignment': '', 'Var': ''}","Label","mBase","[]")
		self.progressBar=forms
		self.create("{'Left': '35', 'BackColor': '(1,1,1,1)', 'Name': 'progressBar', 'Picture': '', 'ParentsType': 'Layout', 'Height': '20', 'Width': '335', 'Top': '245', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Alignment': '', 'Var': ''}","Label","mBase","[]")
		self.ProgressPercent=forms
		self.create("{'Left': '35', 'BackColor': '(1,1,1,1)', 'Name': 'ProgressPercent', 'Picture': '', 'ParentsType': 'Layout', 'Height': '25', 'Width': '65', 'Top': '220', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Alignment': 'CENTER', 'Var': ''}","Label","mBase","[]")
		self.btnMedications=forms
		self.create("{'Left': '25', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'Name': 'btnMedications', 'Picture': '', 'ParentsType': 'Layout', 'Height': '70', 'Width': '105', 'Top': '280', 'Enable': 'True', 'Events': '[[, ]]', 'Help': '', 'Text': '', 'Tag': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Var': ''}","Layout","mBase","[]")
		import DatagridTreeView
		self.pDocList=DatagridTreeView.Handler
		self.create("{'BackColor': '(0, 0.13850357217935416, 0.3611756806026073, 0.5)', 'ParentsType': 'Layout', 'Name': 'pDocList', 'Picture': '', 'Height': '200', 'AlternateColor': 'False', 'SELECT': '#FFAAAA', 'FontStyle': 'Times New Roman', 'Enable': 'True', 'UNSELECT': '#FFFFFF', 'FontSize': '14', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Help': '', 'Left': '25', 'Top': '385', 'Width': '360', 'dbtype': 'sqllite', 'Text': 'DatagridTreeView1', 'Tag': 'Activex', 'Font': '', 'Visible': 'True', 'Var': ''}","DatagridTreeView","mBase","[]")
		import DatagridTreeView
		self.pHotline=DatagridTreeView.Handler
		self.create("{'BackColor': '(0, 0.21762000334179232, 0.9417347146107952, 0.5)', 'ParentsType': 'Layout', 'Name': 'pHotline', 'Picture': '', 'Height': '245', 'AlternateColor': 'False', 'SELECT': '#FFAAAA', 'FontStyle': 'Times New Roman', 'Enable': 'False', 'UNSELECT': '#FFFFFF', 'FontSize': '14', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Help': '', 'Left': '20', 'Top': '225', 'Width': '365', 'dbtype': 'sqllite', 'Text': 'DatagridTreeView1', 'Tag': 'Activex', 'Font': '', 'Visible': 'False', 'Var': ''}","DatagridTreeView","mBase","[]")
	def Widget(self):
		if self._usercontrol in self._mainlayout.get_children():
			self._mainlayout.remove(self._usercontrol)
		return self._usercontrol
	def Hide(self):
		self._window.hide()
	def Show(self,modal=False,x=None,y=None):
		if x!=None:
			self._window.move(x,y)
		self._window.set_modal(modal)
		self._window.show()
		Gtk.main()
		return ""#put ur return value here upon closing this form
if __name__ == "__main__":
	_m = Handler()
	_m._window.show()
	Gtk.main()