import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):					initUI(self,param,w=400,h=400,title="WiredGTKV1.0 frmmain")		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			return False			else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Top': '152', 'Height': '51', 'Width': '245', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Events': '[clicked]', 'Enable': 'True', 'Text': 'Show non modal', 'ParentsType': '', 'Name': 'Button1', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Left': '65', 'Picture': '', 'Font': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Top': '117', 'Height': '30', 'Width': '170', 'Alignment': '', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Events': '[]', 'Enable': 'True', 'Text': 'Entry1', 'ParentsType': '', 'Name': 'Entry1', 'Tag': '', 'ForeColor': '(0.85,0.17,0.17,1)', 'Left': '96', 'Picture': '', 'Font': 'Sans Bold Italic 12'}","Entry","usercontrol","[]")		self.create("{'Top': '213', 'Height': '50', 'Width': '247', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Events': '[clicked]', 'Enable': 'True', 'Text': 'Show Modal', 'ParentsType': '', 'Name': 'Button2', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Left': '64', 'Picture': '', 'Font': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Top': '274', 'Height': '53', 'Width': '248', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Events': '[clicked]', 'Enable': 'True', 'Text': 'Show w/ pointer from this form', 'ParentsType': '', 'Name': 'Button3', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Left': '64', 'Picture': '', 'Font': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Top': '336', 'Height': '53', 'Width': '283', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Events': '[clicked]', 'Enable': 'True', 'Text': 'Show Modal w/ Return value(Dialog like forms)', 'ParentsType': '', 'Name': 'Button4', 'Tag': '', 'ForeColor': '(0,0,0,1)', 'Left': '64', 'Picture': '', 'Font': ''}","Button","usercontrol","[['clicked', 'self,e']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def Button1_clicked(self,e):		import _frmwindow1		f=_frmwindow1.Handler(None)		f.Show()		pass	def Button2_clicked(self,e):		import _frmwindow1		f=_frmwindow1.Handler(None)		f.Show(modal=True)		pass	def Button3_clicked(self,e):		import _frmparam		f=_frmparam.Handler(self)#param		f.Show(modal=True)		pass	def Button4_clicked(self,e):		import _frmdialog		f=_frmdialog.Handler(self)#param		ret=f.Show(modal=True)		self.Entry1.Text=ret		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()