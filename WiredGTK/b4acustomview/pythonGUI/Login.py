import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):					initUI(self,param,w=400,h=400,title="WiredGTKV1.0",controlbox=True,startpos=(200,200),timeoutdestroy=-1)		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			#ExitApplication() #activate this if u want to destroy this window			return False		else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			if self.timeoutdestroy!=-1:				self.timeoutdestroy-=1				if self.timeoutdestroy==0:					self.unload(None)			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.Activity=forms		self.create("{'Visible': 'True', 'ParentsType': '', 'Events': '[]', 'Font': '', 'Width': '643', 'Text': 'Layout1', 'Picture': '', 'Left': '50', 'Top': '30', 'BackColor': '(0, 0.15818675032557372, 0.9408383013784336, 0.5)', 'Help': '', 'Enable': 'True', 'Height': '800', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'Name': 'Activity', 'Var': ''}","Layout","usercontrol","[]")		self.mBase=forms		self.create("{'Visible': 'True', 'ParentsType': 'Layout', 'Events': '[]', 'Font': '', 'Width': '424', 'Text': 'Layout2', 'Picture': '', 'Left': '30', 'Top': '30', 'BackColor': '(1.00,1.00,1.00,1)', 'Help': '', 'Enable': 'True', 'Height': '465', 'ForeColor': '(0, 0, 0,1)', 'Tag': '', 'Name': 'mBase', 'Var': ''}","Layout","Activity","[]")		self.p_username=forms		self.create("{'Visible': 'True', 'ParentsType': '', 'Events': '[]', 'Font': '', 'Width': '280', 'Text': '', 'Picture': '', 'Left': '155', 'Top': '360', 'BackColor': '(1,1,1,1)', 'Help': '', 'Enable': 'True', 'Height': '30', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'Alignment': '', 'Name': 'p_username', 'Var': ''}","Entry","usercontrol","[]")		self.p_password=forms		self.create("{'Visible': 'True', 'ParentsType': '', 'Events': '[]', 'Font': '', 'Width': '280', 'Text': '', 'Picture': '', 'Left': '155', 'Top': '400', 'BackColor': '(1,1,1,1)', 'Help': '', 'Enable': 'False', 'Height': '30', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'Alignment': '', 'Name': 'p_password', 'Var': ''}","Entry","usercontrol","[]")		self.p_login=forms		self.create("{'Visible': 'True', 'ParentsType': 'Layout', 'Events': '[]', 'Font': '', 'Width': '280', 'Text': 'Login', 'Picture': '', 'Left': '75', 'Top': '385', 'BackColor': '(1,1,1,1)', 'Help': '', 'Enable': 'True', 'Height': '30', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'Name': 'p_login', 'Var': ''}","Button","mBase","[]")		self.Image1=forms		self.create("{'Visible': 'True', 'ParentsType': 'Layout', 'Events': '[]', 'Font': '', 'Width': '425', 'Text': 'Image1', 'Picture': 'OPTUMizer.png', 'Left': '0', 'Top': '0', 'BackColor': '(1,1,1,1)', 'Help': '', 'Enable': 'False', 'Height': '290', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'Name': 'Image1', 'Var': ''}","Image","mBase","[]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False,x=None,y=None):		if x!=None:			self._window.move(x,y)		self._window.set_modal(modal)		self._window.show()		Gtk.main()		return ""#put ur return value here upon closing this formif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()