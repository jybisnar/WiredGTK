import gi
import time
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk,GObject,Gdk,Pango,GLib
from wta_module import *
#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils
#	#####################www.WireThemAll.com#####################

class Handler(object):
	#WiredEvent def usercontrolEvent1(self,e)	#add more events 
	def __init__(self,*param):
		initUI(self,param,w=500,h=500,title="WiredGTKV1.0 Serial Sample 2")
		self.GTKForms()
		self.sch=Scheduler(500)#500 ms
		self.sch.Start()		

		self.parse1=Parser("WTA", '\r', 1, _sizeofdata=20)
	def unload(self,*args):
		GLib.source_remove(self.timeout_id)
		self._window.hide()
		del self._window
		Gtk.main_quit()		
	def loop(self, user_data):
		if self.form_load==False:
			self.form_load=True
		if self.sch.Event():#timer routine
			#code here
			self.sch.Start()#restart scheduler
		return True	#return true so that main_loop can call it again 
	def create(self,prop,control,parent,event=[]):
		createWidget(self,prop,control,parent,event)
	def GTKForms(self):
		self.create("{'Name': 'SerialPort1', 'Text': 'SerialPort1', 'Top': '67', 'Left': '27', 'Width': '32', 'Height': '23', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(0, 0.021223361951240083, 0.27383662045423907, 0.5)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[CommEvent]', 'Tag': 'Activex', 'ParentsType': '', 'Var': '', 'Help': '', 'Port': '/dev/ttyUSB0', 'Setting': '9600,n,8,1', 'Open': ''}","SerialPort","usercontrol","[['CommEvent', 'self,e']]")
		self.create("{'Name': 'btnOpen', 'Text': 'btnOpen', 'Top': '133', 'Left': '24', 'Width': '100', 'Height': '50', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[clicked]', 'Tag': '', 'ParentsType': '', 'Var': '', 'Help': ''}","Button","usercontrol","[['clicked', 'self,e']]")
		self.create("{'Name': 'txtRX', 'Text': 'txtRX', 'Top': '233', 'Left': '29', 'Width': '273', 'Height': '39', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[[, ]]', 'Tag': '', 'ParentsType': '', 'Var': '', 'Help': ''}","Entry","usercontrol","[]")
		self.create("{'Name': 'btnSend', 'Text': 'btnSend', 'Top': '193', 'Left': '27', 'Width': '100', 'Height': '30', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[clicked]', 'Tag': '', 'ParentsType': '', 'Var': '', 'Help': ''}","Button","usercontrol","[['clicked', 'self,e']]")
		self.create("{'Name': 'txtSend', 'Text': 'txtSend', 'Top': '195', 'Left': '131', 'Width': '170', 'Height': '30', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[[, ]]', 'Tag': '', 'ParentsType': '', 'Var': '', 'Help': ''}","Entry","usercontrol","[]")
	def Widget(self):
		if self._usercontrol in self._mainlayout.get_children():
			self._mainlayout.remove(self._usercontrol)
		return self._usercontrol
	def Hide(self):
		self._window.hide()
	def Show(self,modal=False):
		self._window.set_modal(modal)
		self._window.show()
		Gtk.main()
	def SerialPort1_CommEvent(self,e):
		while(e.available()):
			c= e.read()
			c=c.decode()
			if self.parse1.available(c)==True:
				self.txtRX.Text = self.parse1.data
		pass
	def btnOpen_clicked(self,e):
		self.SerialPort1.Open=True
		#mega2560,uno(orig)= '/dev/ttyACM0'
		#ch340,PL2303,cp230= '/dev/ttyUSB0'
		#raspi builtin 40 pinstx,rx = '/dev/ttyS0' check using dmesg | grep tty
		#enable serial in raspi config menu
		pass
	def btnSend_clicked(self,e):
		s=self.txtSend.Text+'\r'
		self.SerialPort1.print(s.encode())
		pass
if __name__ == "__main__":
	_m = Handler()
	_m._window.show()
	Gtk.main()
