import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *import cv2import numpy as np#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):					initUI(self,param,w=650,h=600,title="WiredGTKV1.0")		self.GTKForms()		self.sch=Scheduler(100)#100 ms, 10 frames per seconds		self.sch.Start()		self.video_capture=None		self.AdjustmentScrollBar(self._R1,0,256)		self.AdjustmentScrollBar(self._R2,255,256)		self.AdjustmentScrollBar(self._G1,0,256)		self.AdjustmentScrollBar(self._G2,255,256)		self.AdjustmentScrollBar(self._B1,0,256)		self.AdjustmentScrollBar(self._B2,255,256)	def AdjustmentScrollBar(self,widget,default,hi):		adj=widget.get_adjustment()		adj.set_upper(hi)					adj.set_value(default)	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			Gtk.main_quit()				else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			if self.video_capture!=None:				ret, frame = self.video_capture.read()				r=float(self.R1.Text);r2=float(self.R2.Text);				g=float(self.G1.Text);g2=float(self.G2.Text);				b=float(self.B1.Text);b2=float(self.B2.Text);								lower_blue = np.array([b,g,r])				upper_blue = np.array([b2,g2,r2])							hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)				# Threshold the HSV image to get only blue colors				mask = cv2.inRange(hsv, lower_blue, upper_blue)				# Bitwise-AND mask and original image				res = cv2.bitwise_and(frame,frame, mask= mask)				self.Image1.LoadPictureOCV=mask			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Left': '3', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Width': '380', 'Top': '186', 'Picture': '', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'Image1', 'ParentsType': '', 'Enable': 'True', 'Height': '319', 'Name': 'Image1', 'Font': ''}","Image","usercontrol","[]")		self.create("{'Left': '2', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Width': '170', 'Top': '35', 'Picture': '', 'Events': '[[, ]]', 'ForeColor': '(0.10,0.12,0.69,1)', 'Visible': 'True', 'Text': '0', 'ParentsType': '', 'Enable': 'True', 'Height': '30', 'Name': 'Entry1', 'Font': 'Sans Bold 12'}","Entry","usercontrol","[]")		self.create("{'Left': '1', 'Tag': '', 'BackColor': '(0.94,0.06,0.91,1)', 'Width': '170', 'Top': '3', 'Picture': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'Camera', 'ParentsType': '', 'Enable': 'True', 'Height': '30', 'Name': 'Label1', 'Font': 'Segoe Print Bold Italic 14'}","Label","usercontrol","[]")		self.create("{'Left': '179', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Width': '100', 'Top': '16', 'Picture': '', 'Events': '[clicked]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'Start', 'ParentsType': '', 'Enable': 'True', 'Height': '50', 'Name': 'Button1', 'Font': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Left': '285', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Width': '100', 'Top': '17', 'Picture': '', 'Events': '[clicked]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'Stop', 'ParentsType': '', 'Enable': 'True', 'Height': '50', 'Name': 'Button2', 'Font': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Left': '0', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Width': '400', 'Top': '76', 'Picture': '', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'HScrollbar1', 'ParentsType': '', 'Enable': 'True', 'Height': '24', 'Name': 'R1', 'Font': ''}","HScrollbar","usercontrol","[]")		self.create("{'Left': '0', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Width': '400', 'Top': '91', 'Picture': '', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'HScrollbar2', 'ParentsType': '', 'Enable': 'True', 'Height': '24', 'Name': 'R2', 'Font': ''}","HScrollbar","usercontrol","[]")		self.create("{'Left': '0', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Width': '400', 'Top': '118', 'Picture': '', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'HScrollbar3', 'ParentsType': '', 'Enable': 'True', 'Height': '24', 'Name': 'G1', 'Font': ''}","HScrollbar","usercontrol","[]")		self.create("{'Left': '0', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Width': '400', 'Top': '133', 'Picture': '', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'HScrollbar4', 'ParentsType': '', 'Enable': 'True', 'Height': '24', 'Name': 'G2', 'Font': ''}","HScrollbar","usercontrol","[]")		self.create("{'Left': '0', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Width': '400', 'Top': '166', 'Picture': '', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'HScrollbar5', 'ParentsType': '', 'Enable': 'True', 'Height': '24', 'Name': 'B2', 'Font': ''}","HScrollbar","usercontrol","[]")		self.create("{'Left': '0', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Width': '400', 'Top': '152', 'Picture': '', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'HScrollbar6', 'ParentsType': '', 'Enable': 'True', 'Height': '24', 'Name': 'B1', 'Font': ''}","HScrollbar","usercontrol","[]")		self.create("{'Left': '401', 'Tag': '', 'BackColor': '(0.88,0.09,0.09,1)', 'Width': '100', 'Top': '80', 'Picture': '', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'Red', 'ParentsType': '', 'Enable': 'True', 'Height': '30', 'Name': 'Label2', 'Font': ''}","Label","usercontrol","[]")		self.create("{'Left': '401', 'Tag': '', 'BackColor': '(0.06,0.97,0.10,1)', 'Width': '100', 'Top': '123', 'Picture': '', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'Green', 'ParentsType': '', 'Enable': 'True', 'Height': '30', 'Name': 'Label3', 'Font': ''}","Label","usercontrol","[]")		self.create("{'Left': '401', 'Tag': '', 'BackColor': '(0.12,0.18,0.98,1)', 'Width': '100', 'Top': '156', 'Picture': '', 'Events': '[]', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'Text': 'Blue', 'ParentsType': '', 'Enable': 'True', 'Height': '30', 'Name': 'Label4', 'Font': ''}","Label","usercontrol","[]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def Button1_clicked(self,e):		if self.video_capture==None:			self.video_capture = cv2.VideoCapture(int(self.Entry1.Text))		pass	def Button2_clicked(self,e):		if self.video_capture!=None:			self.video_capture.release()			self.video_capture=None		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()