import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *import cv2#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):					initUI(self,param,w=650,h=600,title="WiredGTKV1.0")		self.GTKForms()		self.sch=Scheduler(100)#100 ms, 10 frames per seconds		self.sch.Start()		self.video_capture=None	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			Gtk.main_quit()				else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			if self.video_capture!=None:				ret, frame = self.video_capture.read()				self.Image1.LoadPictureOCV=frame			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'ParentsType': '', 'Name': 'Image1', 'Width': '380', 'Text': 'Image1', 'Visible': 'True', 'Enable': 'True', 'BackColor': '(1,1,1,1)', 'Left': '5', 'Picture': '', 'Top': '73', 'ForeColor': '(0,0,0,1)', 'Height': '319', 'Events': '[]', 'Font': '', 'Tag': ''}","Image","usercontrol","[]")		self.create("{'ParentsType': '', 'Name': 'Entry1', 'Width': '170', 'Text': '0', 'Visible': 'True', 'Enable': 'True', 'BackColor': '(1,1,1,1)', 'Left': '2', 'Picture': '', 'Top': '35', 'ForeColor': '(0.10,0.12,0.69,1)', 'Height': '30', 'Events': '[]', 'Font': 'Sans Bold 12', 'Tag': ''}","Entry","usercontrol","[]")		self.create("{'ParentsType': '', 'Name': 'Label1', 'Width': '170', 'Text': 'Camera', 'Visible': 'True', 'Enable': 'True', 'BackColor': '(0.94,0.06,0.91,1)', 'Left': '1', 'Picture': '', 'Top': '3', 'ForeColor': '(0,0,0,1)', 'Height': '30', 'Events': '[]', 'Font': 'Segoe Print Bold Italic 14', 'Tag': ''}","Label","usercontrol","[]")		self.create("{'ParentsType': '', 'Name': 'Button1', 'Width': '100', 'Text': 'Start', 'Visible': 'True', 'Enable': 'True', 'BackColor': '(1,1,1,1)', 'Left': '179', 'Picture': '', 'Top': '16', 'ForeColor': '(0,0,0,1)', 'Height': '50', 'Events': '[clicked]', 'Font': '', 'Tag': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'ParentsType': '', 'Name': 'Button2', 'Width': '100', 'Text': 'Stop', 'Visible': 'True', 'Enable': 'True', 'BackColor': '(1,1,1,1)', 'Left': '285', 'Picture': '', 'Top': '17', 'ForeColor': '(0,0,0,1)', 'Height': '50', 'Events': '[clicked]', 'Font': '', 'Tag': ''}","Button","usercontrol","[['clicked', 'self,e']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def Button1_clicked(self,e):		if self.video_capture==None:			self.video_capture = cv2.VideoCapture(int(self.Entry1.Text))		pass	def Button2_clicked(self,e):		if self.video_capture!=None:			self.video_capture.release()			self.video_capture=None		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()