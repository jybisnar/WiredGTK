import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	#WiredEvent def usercontrolEvent1(self,e)	#add more events 	def __init__(self,*param):		initUI(self,param,w=500,h=500,title="WiredGTKV1.0 Serial Sample1")		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()			def unload(self,*args):		GLib.source_remove(self.timeout_id)		self._window.hide()		del self._window		Gtk.main_quit()			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Name': 'SerialPort1', 'Text': 'SerialPort1', 'Top': '50', 'Left': '56', 'Width': '32', 'Height': '23', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[CommEvent]', 'Tag': 'Activex', 'ParentsType': '', 'Port': 'COM1', 'Setting': '9600,n,8,1', 'Open': ''}","SerialPort","usercontrol","[['CommEvent', 'self,e']]")		self.create("{'Name': 'btnOpen', 'Text': 'btnOpen', 'Top': '123', 'Left': '55', 'Width': '100', 'Height': '50', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[clicked]', 'Tag': '', 'ParentsType': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Name': 'txtRX', 'Text': 'txtRX', 'Top': '239', 'Left': '280', 'Width': '170', 'Height': '47', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[]', 'Tag': '', 'ParentsType': ''}","Entry","usercontrol","[]")		self.create("{'Name': 'txtSend', 'Text': 'txtSend', 'Top': '251', 'Left': '56', 'Width': '170', 'Height': '30', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(0.17,0.10,0.90,0.0)', 'ForeColor': '(0.89,0.22,0.22,1)', 'Picture': '', 'Events': '[]', 'Tag': '', 'ParentsType': ''}","Entry","usercontrol","[]")		self.create("{'Name': 'Label1', 'Text': 'Label1', 'Top': '226', 'Left': '279', 'Width': '172', 'Height': '21', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(0.24,0.73,0.25,1)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[[, ]]', 'Tag': '', 'ParentsType': ''}","Label","usercontrol","[]")		self.create("{'Name': 'Label2', 'Text': 'Label2', 'Top': '229', 'Left': '56', 'Width': '172', 'Height': '21', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(0.81,0.18,0.18,1)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[[, ]]', 'Tag': '', 'ParentsType': ''}","Label","usercontrol","[]")		self.create("{'Name': 'btnSend', 'Text': 'btnSend', 'Top': '277', 'Left': '56', 'Width': '174', 'Height': '50', 'Visible': 'True', 'Enable': 'True', 'Font': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Picture': '', 'Events': '[clicked]', 'Tag': '', 'ParentsType': ''}","Button","usercontrol","[['clicked', 'self,e']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def SerialPort1_CommEvent(self,e):		while(e.available()):			c= e.read()			c=c.decode()						self.txtRX.Text+= c		pass	def btnOpen_clicked(self,e):		self.SerialPort1.Open=True		pass	def btnSend_clicked(self,e):		s=self.txtSend.Text+'\r'		self.SerialPort1.println(s.encode())		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()