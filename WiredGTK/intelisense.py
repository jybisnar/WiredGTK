import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdkfrom wired_module import *import DataGridimport DBUtils#	Generated By Glade To Python: by Rocky Nuarin, Aug 2017 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,lst,isr):		#import MySQLdb		#self.db = MySQLdb.connect(host="localhost",user="root",db="wtaAldrin",port=3306)		#self.db = MySQLdb.connect(host="localhost",user="root",db="wta",port=3306)				#builder = Gtk.Builder()		#$self.builder=builder		#builder.add_from_file("gladefilename")		#builder.connect_signals(self)		#self.win=[]				self.window1 = Gtk.Window();self.window1.connect("destroy", Gtk.main_quit);self.window1W=forms(self.window1)		self.mainlayout=Gtk.Layout();self.layoutW=forms(self.mainlayout);self.mainlayout.show();self.layoutW.Dimension=1366,768;self.window1.add(self.mainlayout);		self.usercontrol=Gtk.Layout();self.usercontrolW=forms(self.usercontrol);self.usercontrol.show();self.usercontrolW.Dimension=1366,768;self.mainlayout.put(self.usercontrol,0,0);				self.timeout_id = GObject.timeout_add(10, self.loop, None)#10ms 		self.sch=Scheduler(500)#500 ms		self.sch.Start()		self.form_load=False		self.window1W.Text="GTKWired"		self.create("{'Enable': 'True', 'Name': 'ScrolledWindow1', 'Visible': 'True', 'Text': 'ScrolledWindow1', 'Top': '0', 'Height': '350', 'ParentsType': '', 'Width': '300', 'ForeColor': '(0, 0, 0, 1)', 'Tag': '', 'BackColor': '(1, 1, 1, 1)', 'Events': '', 'Left': '1'}","ScrolledWindow","usercontrol","[['button-press-event', 'self,event,e']]")		self.create("{'Enable': 'True', 'Name': 'Viewport1', 'Visible': 'True', 'Text': 'Viewport1', 'Top': '-1', 'Height': '350', 'ParentsType': 'ScrolledWindow', 'Width': '280', 'ForeColor': '(0, 0, 0, 1)', 'Tag': '', 'BackColor': '(1, 1, 1, 1)', 'Events': '', 'Left': '0'}","Viewport","ScrolledWindow1","[['button-press-event', 'self,event,e']]")		self.create("{'Enable': 'True', 'Name': 'Layout1', 'Visible': 'True', 'Text': 'Layout1', 'Top': '-1', 'Height': '350', 'ParentsType': 'Viewport', 'Width': '250', 'ForeColor': '(0, 0, 0, 1)', 'Tag': '', 'BackColor': '(1, 1, 1, 1)', 'Events': '', 'Left': '0'}","Layout","Viewport1","[['button-press-event', 'self,event,e']]")		for i,b in enumerate(lst):			a=Gtk.Label();			self.Layout1.put(a,0,30*i+10)			forms(a).Width=80			forms(a).Height=30			forms(a).Text=b			forms(a).Visible=True		self.Layout1W.Height=i*30+100			#self.Viewport1W.Height=i*30+30		def loop(self, user_data):		if self.form_load==False:			self.form_load=True			self.parse=Parser("WTA","\r",1)		#        Serial.begin(9600)#enable serial comm		if self.sch.Event():#timer routine			#code here			self.sch.Start()		#while Serial.available():#enable serial comm		#        c=Serialx.read()		#        if self.parse.DataReceived(c):		#                print int(getCSV(0,",", self.parse.data))                        		return True	#return true so that main_loop can call it again                        	def clickISR(self,items):		#self.btdelete_items.show()#delete		#self.btnupdate_items.show()#update				#self.dbUtils.TableValToUserInput("Items",items)		print(items)	def Scroll(self,line):		y=self.ScrolledWindow1.get_property('vadjustment')		y.set_value(line*30)  			def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def Widget(self):		if self.usercontrol in self.mainlayout.get_children():			self.mainlayout.remove(self.usercontrol)		return self.usercontrol	def WidgetSetSize(self,width,height):		self.usercontrol.set_size_request(width,height)	def WidgetSize(self):		return {'width':self.usercontrol.get_size_request()[0],'height':self.usercontrol.get_size_request()[1]}	def Hide(self):		self.usercontrol.hide()	def Show(self):		self.usercontrol.show()	#example: Add Two usercontrol to your form	#at the very end of your class Handler: constructor(def __init__(self))	#x=myWidget.Handler()#first instance of your usercontrol	#y=myWidget.Handler()#second instance of your usercontrol	#self.mainlayout.put(x.Widget(),0,0)#add first usercontrol to your main form	#self.mainlayout.put(y.Widget(),0+x.WidgetSize()['width']+5,0)#add second usercontrol to your main form	#self.myusercontrol1=x#add reference so we can access this control within this class	#self.myusercontrol2=y#add reference so we can access this control within this class	def ScrolledWindow1_button_press_event(self,event,e):		pass	def Viewport1_button_press_event(self,event,e):		pass	def Layout1_button_press_event(self,event,e):		passif __name__ == "__main__":	_m = Handler(["123","456","456","456","456","456","456","456","456","456","456","456x"],None)	_m.window1.show()	Gtk.main()