import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):					initUI(self,param,w=800,h=500,title="WiredGTKV1.0 OpenCV")		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			Gtk.main_quit()				else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Events': '[clicked]', 'Font': '', 'Height': '48', 'Enable': 'True', 'Width': '168', 'Visible': 'True', 'Left': '5', 'Name': 'Button1', 'Top': '299', 'Picture': '', 'Text': 'Load \\image\\sodoku.png', 'ForeColor': '(0,0,0,1)', 'ParentsType': '', 'Tag': '', 'BackColor': '(1,1,1,1)'}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Events': '[clicked]', 'Font': '', 'Height': '50', 'Enable': 'True', 'Width': '172', 'Visible': 'True', 'Left': '5', 'Name': 'Button2', 'Top': '358', 'Picture': '', 'Text': 'cv2.threshold', 'ForeColor': '(0,0,0,1)', 'ParentsType': '', 'Tag': '', 'BackColor': '(1,1,1,1)'}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Events': '[]', 'Font': '', 'Height': '204', 'Enable': 'True', 'Width': '206', 'Visible': 'True', 'Left': '7', 'Name': 'ImageX', 'Top': '89', 'Picture': '', 'Text': 'Image1', 'ForeColor': '(0,0,0,1)', 'ParentsType': '', 'Tag': '', 'BackColor': '(1,1,1,1)'}","Image","usercontrol","[]")		self.create("{'Events': '[[, ]]', 'Font': '', 'Height': '204', 'Enable': 'True', 'Width': '206', 'Visible': 'True', 'Left': '245', 'Name': 'Image1', 'Top': '58', 'Picture': '', 'Text': 'Image1', 'ForeColor': '(0,0,0,1)', 'ParentsType': '', 'Tag': '', 'BackColor': '(1,1,1,1)'}","Image","usercontrol","[]")		self.create("{'Events': '[[, ]]', 'Font': '', 'Height': '204', 'Enable': 'True', 'Width': '206', 'Visible': 'True', 'Left': '459', 'Name': 'Image2', 'Top': '55', 'Picture': '', 'Text': 'Image2', 'ForeColor': '(0,0,0,1)', 'ParentsType': '', 'Tag': '', 'BackColor': '(1,1,1,1)'}","Image","usercontrol","[]")		self.create("{'Events': '[[, ]]', 'Font': '', 'Height': '204', 'Enable': 'True', 'Width': '206', 'Visible': 'True', 'Left': '245', 'Name': 'Image3', 'Top': '318', 'Picture': '', 'Text': 'Image3', 'ForeColor': '(0,0,0,1)', 'ParentsType': '', 'Tag': '', 'BackColor': '(1,1,1,1)'}","Image","usercontrol","[]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def Button1_clicked(self,e):		self.ImageX.LoadPicture='image/sudoku.png'		pass	def Button2_clicked(self,e):		img = cv2.imread('image/sudoku.png',0)		img = cv2.medianBlur(img,3)		ret,th1 = cv2.threshold(img,150,255,cv2.THRESH_BINARY)		th2 = cv2.adaptiveThreshold(img,255,cv2.ADAPTIVE_THRESH_MEAN_C,\            		cv2.THRESH_BINARY,11,2)		th3 = cv2.adaptiveThreshold(img,255,cv2.ADAPTIVE_THRESH_GAUSSIAN_C,\            		cv2.THRESH_BINARY,11,2)				cv2.imshow('ADAPTIVE_THRESH_GAUSSIAN_C',th3);cv2.waitKey(1)				self.Image1.LoadPictureOCV=th1		self.Image2.LoadPictureOCV=th2		self.Image3.LoadPictureOCV=th3		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()