import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	#WiredEvent def usercontrolEvent1(self,e)	#add more events 	def __init__(self,*param):		initUI(self,param,w=500,h=500,title="WiredGTKV1.0 Timer Sample 1")		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()			self.x=0	def unload(self,*args):		GLib.source_remove(self.timeout_id)		self._window.hide()		del self._window		Gtk.main_quit()			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Picture': '', 'Interval': '100', 'Font': '', 'Left': '45', 'Width': '72', 'Enable': 'False', 'Text': 'timer1', 'BackColor': '(0, 0.8506500265790865, 0.005051053815471107, 0.5)', 'ParentsType': '', 'ForeColor': '(0,0,0,1)', 'Tag': 'Activex', 'Top': '150', 'Visible': 'True', 'Name': 'timer1', 'Height': '36', 'Events': '[Tick]'}","Timer","usercontrol","[['Tick', 'self']]")		self.create("{'Picture': '', 'Font': '', 'Left': '86', 'Width': '130', 'Enable': 'True', 'Text': 'Start Timer1', 'BackColor': '(1,1,1,1)', 'ParentsType': '', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'Top': '86', 'Visible': 'True', 'Name': 'Button1', 'Height': '50', 'Events': '[clicked]'}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Picture': '', 'Font': '', 'Left': '86', 'Width': '170', 'Enable': 'True', 'Text': 'Entry1', 'BackColor': '(1,1,1,1)', 'ParentsType': '', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'Top': '51', 'Visible': 'True', 'Name': 'Entry1', 'Height': '30', 'Events': '[[, ]]'}","Entry","usercontrol","[]")		self.create("{'Picture': '', 'Font': '', 'Left': '230', 'Width': '130', 'Enable': 'True', 'Text': 'Stop Timer1', 'BackColor': '(1,1,1,1)', 'ParentsType': '', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'Top': '88', 'Visible': 'True', 'Name': 'Button2', 'Height': '50', 'Events': '[clicked]'}","Button","usercontrol","[['clicked', 'self,e']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def timer1_Tick(self):		self.Entry1.Text=str(self.x)		self.x+=1		pass	def Button1_clicked(self,e):		self.timer1.Enable=True		pass	def Button2_clicked(self,e):		self.timer1.Enable=False		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()