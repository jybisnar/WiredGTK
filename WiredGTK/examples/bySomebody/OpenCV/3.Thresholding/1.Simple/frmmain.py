import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):					initUI(self,param,w=800,h=500,title="WiredGTKV1.0 OpenCV")		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			Gtk.main_quit()				else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Width': '133', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '54', 'Picture': '', 'Enable': 'True', 'Left': '231', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Image1', 'ParentsType': '', 'Text': 'Image2', 'Height': '139', 'Visible': 'True'}","Image","usercontrol","[]")		self.create("{'Width': '168', 'Font': '', 'Events': '[clicked]', 'ForeColor': '(0,0,0,1)', 'Top': '204', 'Picture': '', 'Enable': 'True', 'Left': '17', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Button1', 'ParentsType': '', 'Text': 'Load \\image\\gradient.png', 'Height': '50', 'Visible': 'True'}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Width': '133', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '53', 'Picture': '', 'Enable': 'True', 'Left': '378', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Image2', 'ParentsType': '', 'Text': 'Image3', 'Height': '139', 'Visible': 'True'}","Image","usercontrol","[]")		self.create("{'Width': '172', 'Font': '', 'Events': '[clicked]', 'ForeColor': '(0,0,0,1)', 'Top': '265', 'Picture': '', 'Enable': 'True', 'Left': '15', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Button2', 'ParentsType': '', 'Text': 'cv2.threshold', 'Height': '50', 'Visible': 'True'}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Width': '133', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '53', 'Picture': '', 'Enable': 'True', 'Left': '523', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Image3', 'ParentsType': '', 'Text': 'Image4', 'Height': '139', 'Visible': 'True'}","Image","usercontrol","[]")		self.create("{'Width': '133', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '247', 'Picture': '', 'Enable': 'True', 'Left': '228', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Image4', 'ParentsType': '', 'Text': 'Image5', 'Height': '139', 'Visible': 'True'}","Image","usercontrol","[]")		self.create("{'Width': '133', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '246', 'Picture': '', 'Enable': 'True', 'Left': '381', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Image5', 'ParentsType': '', 'Text': 'Image6', 'Height': '139', 'Visible': 'True'}","Image","usercontrol","[]")		self.create("{'Width': '133', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '55', 'Picture': '', 'Enable': 'True', 'Left': '20', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'ImageX', 'ParentsType': '', 'Text': 'Image1', 'Height': '139', 'Visible': 'True'}","Image","usercontrol","[]")		self.create("{'Width': '100', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '18', 'Picture': '', 'Enable': 'True', 'Left': '229', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Label1', 'ParentsType': '', 'Text': 'THRESH_BINARY', 'Height': '30', 'Visible': 'True'}","Label","usercontrol","[]")		self.create("{'Width': '100', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '19', 'Picture': '', 'Enable': 'True', 'Left': '379', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Label2', 'ParentsType': '', 'Text': 'THRESH_BINARY_INV', 'Height': '30', 'Visible': 'True'}","Label","usercontrol","[]")		self.create("{'Width': '100', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '20', 'Picture': '', 'Enable': 'True', 'Left': '525', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Label3', 'ParentsType': '', 'Text': 'THRESH_TRUNC', 'Height': '30', 'Visible': 'True'}","Label","usercontrol","[]")		self.create("{'Width': '100', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '210', 'Picture': '', 'Enable': 'True', 'Left': '235', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Label4', 'ParentsType': '', 'Text': 'THRESH_TOZERO', 'Height': '30', 'Visible': 'True'}","Label","usercontrol","[]")		self.create("{'Width': '100', 'Font': '', 'Events': '[[, ]]', 'ForeColor': '(0,0,0,1)', 'Top': '209', 'Picture': '', 'Enable': 'True', 'Left': '385', 'BackColor': '(1,1,1,1)', 'Tag': '', 'Name': 'Label5', 'ParentsType': '', 'Text': 'THRESH_TOZERO_INV', 'Height': '30', 'Visible': 'True'}","Label","usercontrol","[]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def Button1_clicked(self,e):		self.ImageX.LoadPicture='image/gradient.png'		pass	def Button2_clicked(self,e):		img = cv2.imread('image/gradient.png',0)		ret,thresh1 = cv2.threshold(img,127,255,cv2.THRESH_BINARY)		ret,thresh2 = cv2.threshold(img,127,255,cv2.THRESH_BINARY_INV)		ret,thresh3 = cv2.threshold(img,127,255,cv2.THRESH_TRUNC)		ret,thresh4 = cv2.threshold(img,127,255,cv2.THRESH_TOZERO)		ret,thresh5 = cv2.threshold(img,127,255,cv2.THRESH_TOZERO_INV)		self.Image1.LoadPictureOCV=thresh1		self.Image2.LoadPictureOCV=thresh2		self.Image3.LoadPictureOCV=thresh3		self.Image4.LoadPictureOCV=thresh4		self.Image5.LoadPictureOCV=thresh5		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()