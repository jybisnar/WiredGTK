import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):				initUI(self,param,w=500,h=500,title="WiredGTKV1.0 Spin Sample 1")		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()				adj2 = Gtk.Adjustment(1.0, 1.0, 12.0, 1.0, 5.0, 0.0)		self._SpinButton1.set_adjustment(adj2)	def unload(self,*args):		GLib.source_remove(self.timeout_id)		self._window.hide()		del self._window		Gtk.main_quit()			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Picture': '', 'Enable': 'True', 'Name': 'Entry1', 'Visible': 'True', 'Text': 'Entry1', 'Top': '50', 'Height': '30', 'ParentsType': '', 'Width': '170', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Font': '', 'Events': '[]', 'Left': '300'}","Entry","usercontrol","[]")		self.create("{'Picture': '', 'Enable': 'True', 'Name': 'SpinButton1', 'Visible': 'True', 'Text': '100', 'Top': '84', 'Height': '30', 'ParentsType': '', 'Width': '100', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'BackColor': '(1,1,1,1)', 'Font': '', 'Events': '[changed]', 'Left': '302'}","SpinButton","usercontrol","[['changed', 'self,e']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False):		self._window.set_modal(modal)		self._window.show()		Gtk.main()	def SpinButton1_changed(self,e):		self.Entry1.Text=self.SpinButton1.Text		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()